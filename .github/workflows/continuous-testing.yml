name: Continuous Testing

on:
  push:
    branches: ["main"]
    paths-ignore:
      - '**/README.md'
      - '**/CONTRIBUTING.md'
      - '**/CODE_OF_CONDUCT.md'
      - '**/SECURITY.md'
      - '**/.github/ISSUE_TEMPLATE/*'
      - '**/.github/PULL_REQUEST_TEMPLATE/*'
      - '**/LICENSE'
  pull_request:
    branches: ["main"]
    paths-ignore:
      - '**/README.md'
      - '**/CONTRIBUTING.md'
      - '**/CODE_OF_CONDUCT.md'
      - '**/SECURITY.md'
      - '**/.github/ISSUE_TEMPLATE/*'
      - '**/.github/PULL_REQUEST_TEMPLATE/*'
      - '**/LICENSE'

permissions:
  contents: read  # No write permission needed

jobs:
  continuous-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10 with Caching
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"  # Cache pip packages to improve workflow runtime

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]  # Install dependencies from pyproject.toml (dev section)

      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run Tests with Coverage
        run: |
          pytest --cov=minerva --cov=tests --cov-report=term --cov-report=html

      - name: Upload HTML Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: html-coverage-report
          path: htmlcov/  # Upload the generated HTML report directory
      
      - name: Creating interrogate folder
        run: |
          mkdir interrogate


      - name: Docstring Coverage
        run: interrogate minerva -vv --fail-under=80 --generate-badge interrogate/interrogate_badge.svg --badge-format svg -o interrogate/simple-report.md
        continue-on-error: true
      
      - name: Upload Docstring Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: docstring-coverage-files
          path: interrogate/  # Upload the generated docstring coverage report
